directive @auth(
  for: [Capabilities] = []
  and: Boolean = false
) on OBJECT | FIELD_DEFINITION
directive @constraint(
  minLength: Int
  maxLength: Int
  startsWith: String
  endsWith: String
  notContains: String
  pattern: String
  format: String
  min: Int
  max: Int
  exclusiveMin: Int
  exclusiveMax: Int
  multipleOf: Int
) on INPUT_FIELD_DEFINITION
directive @specifiedBy(url: String!) on SCALAR
type AckDetails {
  rate: Float
}

scalar algorithm_String_NotNull_minLength_3

type AppInfo {
  version: String!
  dependencies: [DependencyVersion!]!
}

interface StixObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
}

type Artifact implements BasicObject & StixObject & StixCoreObject & StixCyberObservable & HashedObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  hashes: [Hash]
  mime_type: String
  payload_bin: String
  url: String
  encryption_algorithm: String
  decryption_key: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input ArtifactAddInput {
  hashes: [HashInput]
  mime_type: String
  payload_bin: String
  url: String
  encryption_algorithm: String
  decryption_key: String
}

type AttackPattern implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  name: String!
  description: String
  aliases: [String]
  x_mitre_platforms: [String]
  x_mitre_permissions_required: [String]
  x_mitre_detection: String
  x_mitre_id: String
  killChainPhases: KillChainPhaseConnection
  coursesOfAction: CourseOfActionConnection
  parentAttackPatterns: AttackPatternConnection
  subAttackPatterns: AttackPatternConnection
  isSubAttackPattern: Boolean
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input AttackPatternAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String!
  aliases: [String]
  revoked: Boolean
  lang: String
  confidence: Int
  x_mitre_platforms: [String]
  x_mitre_permissions_required: [String]
  x_mitre_detection: String
  x_mitre_id: x_mitre_id_String_NotNull_minLength_1!
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  killChainPhases: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type AttackPatternConnection {
  pageInfo: PageInfo!
  edges: [AttackPatternEdge]
}

type AttackPatternEdge {
  cursor: String!
  node: AttackPattern!
}

type AttackPatternEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): AttackPattern
  contextPatch(input: EditContext): AttackPattern
  contextClean: AttackPattern
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): AttackPattern
}

enum AttackPatternsFilter {
  name
  aliases
  created
  modified
  created_at
  updated_at
  x_mitre_id
  createdBy
  markedBy
  labelledBy
  mitigatedBy
}

input AttackPatternsFiltering {
  key: AttackPatternsFilter!
  values: [String]
  operator: String
}

enum AttackPatternsOrdering {
  x_mitre_id
  name
  created
  modified
  created_at
  updated_at
}

type Attribute {
  id: ID!
  key: String!
  value: String!
}

input AttributeAddInput {
  key: String!
  value: String!
  clientMutationId: String
}

type AttributeConnection {
  pageInfo: PageInfo!
  edges: [AttributeEdge]
}

type AttributeEdge {
  cursor: String!
  node: Attribute!
}

type AttributeEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Attribute
}

enum AttributesOrdering {
  value
}

type AutonomousSystem implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  number: Int!
  name: String
  rir: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input AutonomousSystemAddInput {
  number: Int!
  name: String
  rir: String
}

interface BasicObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
}

interface BasicRelationship {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  fromRole: String
  toRole: String
  created_at: DateTime!
  updated_at: DateTime!
}

type Campaign implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  name: String!
  description: String
  aliases: [String]
  first_seen: DateTime
  last_seen: DateTime
  objective: String
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input CampaignAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String!
  aliases: [String]
  revoked: Boolean
  lang: String
  confidence: Int
  first_seen: DateTime
  last_seen: DateTime
  objective: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type CampaignConnection {
  pageInfo: PageInfo!
  edges: [CampaignEdge]
}

type CampaignEdge {
  cursor: String!
  node: Campaign!
}

type CampaignEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Campaign
  contextPatch(input: EditContext): Campaign
  contextClean: Campaign
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Campaign
}

enum CampaignsFilter {
  name
  aliases
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}

input CampaignsFiltering {
  key: CampaignsFilter!
  values: [String]
  operator: String
}

enum CampaignsOrdering {
  name
  first_seen
  last_seen
  role_played
  created
  modified
  created_at
  updated_at
}

enum Capabilities {
  CONNECTORAPI
  KNOWLEDGE
  KNOWLEDGE_KNUPDATE
  KNOWLEDGE_KNUPDATE_KNDELETE
  KNOWLEDGE_KNUPLOAD
  KNOWLEDGE_KNASKIMPORT
  KNOWLEDGE_KNGETEXPORT
  KNOWLEDGE_KNGETEXPORT_KNASKEXPORT
  KNOWLEDGE_KNENRICHMENT
  EXPLORE
  EXPLORE_EXUPDATE
  EXPLORE_EXUPDATE_EXDELETE
  MODULES
  MODULES_MODMANAGE
  SETTINGS
  SETTINGS_SETACCESSES
  SETTINGS_SETMARKINGS
}

type Capability implements BasicObject & InternalObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  name: String!
  description: String
  attribute_order: Int
  created_at: DateTime!
  updated_at: DateTime!
  editContext: [EditUserContext]
}

type CapabilityConnection {
  pageInfo: PageInfo!
  edges: [CapabilityEdge]
}

type CapabilityEdge {
  cursor: String!
  node: Capability!
}

enum CitiesFilter {
  name
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}

input CitiesFiltering {
  key: CitiesFilter!
  values: [String]
  operator: String
}

enum CitiesOrdering {
  name
  description
  aliases
  created
  modified
  created_at
  updated_at
  objectMarking
  objectLabel
}

type City implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Location {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  name: String!
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  x_opencti_aliases: [String]
  country: Country
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input CityAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  confidence: Int
  revoked: Boolean
  lang: String
  x_opencti_aliases: [String]
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type CityConnection {
  pageInfo: PageInfo!
  edges: [CityEdge]
}

type CityEdge {
  cursor: String!
  node: City!
}

type CityEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): City
  contextPatch(input: EditContext): City
  contextClean: City
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): City
}

type Connector implements BasicObject & InternalObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  name: String!
  active: Boolean
  auto: Boolean
  connector_type: String
  connector_scope: [String!]
  connector_state: String
  connector_state_reset: Boolean
  connector_user: User
  updated_at: DateTime
  created_at: DateTime
  config: ConnectorConfig
  works(status: String): [Work]
}

type ConnectorConfig {
  uri: String!
  listen: String!
  listen_exchange: String!
  push: String!
  push_exchange: String!
}

enum ConnectorType {
  EXTERNAL_IMPORT
  INTERNAL_IMPORT_FILE
  INTERNAL_ENRICHMENT
  INTERNAL_EXPORT_FILE
  STREAM
}

scalar ConstraintNumber

scalar ConstraintString

interface Container {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  objects(
    first: Int
    after: ID
    orderBy: StixObjectOrStixRelationshipsOrdering
    orderMode: OrderingMode
    filters: [StixObjectOrStixRelationshipsFiltering]
    filterMode: FilterMode
    search: String
    types: [String]
  ): StixObjectOrStixRelationshipConnection
}

type ContainerConnection {
  pageInfo: PageInfo!
  edges: [ContainerEdge]
}

type ContainerEdge {
  cursor: String!
  node: Container!
}

type ContainerEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Container
  contextPatch(input: EditContext): Container
  contextClean: Container
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Container
}

enum ContainersFilter {
  attribute_abstract
  content
  authors
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
  objectContains
}

input ContainersFiltering {
  key: ContainersFilter!
  values: [String]!
  operator: String
}

enum ContainersOrdering {
  created
  modified
  created_at
  updated_at
  createdBy
}

scalar content_String_NotNull_minLength_2

type ContextData {
  id: String!
  entity_type: String!
  from_id: String
  to_id: String
  message: String!
}

enum CountriesFilter {
  created
  modified
  created_at
  createdBy
  markedBy
  labelledBy
}

input CountriesFiltering {
  key: CountriesFilter!
  values: [String]
  operator: String
}

enum CountriesOrdering {
  name
  description
  created
  modified
  created_at
  updated_at
}

type Country implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Location {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  name: String!
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  x_opencti_aliases: [String]
  region: Region
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input CountryAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  confidence: Int
  revoked: Boolean
  lang: String
  x_opencti_aliases: [String]
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type CountryConnection {
  pageInfo: PageInfo!
  edges: [CountryEdge]
}

type CountryEdge {
  cursor: String!
  node: Country!
}

type CountryEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Country
  contextPatch(input: EditContext): Country
  contextClean: Country
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Country
}

type CourseOfAction implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  name: String!
  description: String
  x_opencti_aliases: [String]
  x_mitre_id: String
  attackPatterns: AttackPatternConnection
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input CourseOfActionAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String!
  x_opencti_aliases: [String]
  x_mitre_id: String
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type CourseOfActionConnection {
  pageInfo: PageInfo!
  edges: [CourseOfActionEdge]
}

type CourseOfActionEdge {
  cursor: String!
  node: CourseOfAction!
}

type CourseOfActionEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): CourseOfAction
  contextPatch(input: EditContext): CourseOfAction
  contextClean: CourseOfAction
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): CourseOfAction
}

enum CoursesOfActionFilter {
  name
  aliases
  created
  modified
  created_at
  createdBy
  markedBy
  labelledBy
  mitigatedBy
}

input CoursesOfActionFiltering {
  key: CoursesOfActionFilter!
  values: [String]
  operator: String
}

enum CoursesOfActionOrdering {
  name
  created
  modified
  created_at
  updated_at
}

scalar DateTime

type DependencyVersion {
  name: String!
  version: String!
}

type Directory implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  path: String!
  path_enc: String
  ctime: DateTime
  mtime: DateTime
  atime: DateTime
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input DirectoryAddInput {
  path: String!
  path_enc: String
  ctime: DateTime
  mtime: DateTime
  atime: DateTime
}

type Distribution {
  label: String!
  entity: StixObjectOrStixRelationship
  value: Int
}

type DomainName implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  observable_value: String!
  x_opencti_score: Int
  x_opencti_description: String
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  value: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input DomainNameAddInput {
  value: String!
}

input EditContext {
  focusOn: String
}

input EditInput {
  id: ID
  key: String!
  value: [String]!
}

enum EditOperation {
  add
  replace
  remove
}

type EditUserContext {
  name: String!
  focusOn: String
}

type EmailAddr implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  value: String
  display_name: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input EmailAddrAddInput {
  value: String
  display_name: String
}

type EmailMessage implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  is_multipart: Boolean
  attribute_date: DateTime
  content_type: String
  message_id: String
  subject: String
  received_lines: [String]
  body: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input EmailMessageAddInput {
  is_multipart: Boolean
  attribute_date: DateTime
  content_type: String
  message_id: String
  subject: String
  received_lines: [String]
  body: String
}

type EmailMimePartType implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  body: String
  content_type: String
  content_disposition: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input EmailMimePartTypeAddInput {
  body: String
  content_type: String
  content_disposition: String
}

type ExternalReference implements BasicObject & StixObject & StixMetaObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  created: DateTime
  modified: DateTime
  source_name: String!
  description: String
  url: String
  hash: String
  external_id: String
  editContext: [EditUserContext]
}

input ExternalReferenceAddInput {
  stix_id: String
  source_name: String!
  description: String
  url: String
  hash: String
  external_id: String
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type ExternalReferenceConnection {
  pageInfo: PageInfo!
  edges: [ExternalReferenceEdge]
}

type ExternalReferenceEdge {
  cursor: String!
  node: ExternalReference!
}

type ExternalReferenceEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): ExternalReference
  contextPatch(input: EditContext): ExternalReference
  contextClean: ExternalReference
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(fromId: String!, relationship_type: String!): ExternalReference
}

enum ExternalReferencesFilter {
  url
  usedBy
  source_name
  external_id
}

input ExternalReferencesFiltering {
  key: ExternalReferencesFilter!
  values: [String]
  operator: String
}

enum ExternalReferencesOrdering {
  source_name
  url
  hash
  external_id
  created
  modified
  created_at
  updated_at
}

type File {
  id: ID!
  name: String!
  size: Int
  lastModified: DateTime
  lastModifiedSinceMin: Int
  metaData: FileMetadata
  uploadStatus: Status!
  works: [Work]
}

type FileConnection {
  pageInfo: PageInfo!
  edges: [FileEdge]
}

type FileEdge {
  cursor: String!
  node: File!
}

type FileMetadata {
  encoding: String
  mimetype: String
  messages: [WorkMessage]
  errors: [WorkMessage]
  list_filters: String
}

enum FilterMode {
  and
  or
}

type Group implements InternalObject & BasicObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  name: String!
  description: String
  members: UserConnection
  created_at: DateTime
  updated_at: DateTime
  allowed_marking: [MarkingDefinition]
  editContext: [EditUserContext]
}

input GroupAddInput {
  name: String!
  description: String
  clientMutationId: String
}

type GroupConnection {
  pageInfo: PageInfo!
  edges: [GroupEdge]
}

type GroupEdge {
  cursor: String!
  node: Group!
}

type GroupEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Group
  contextPatch(input: EditContext): Group
  contextClean: Group
  relationAdd(input: InternalRelationshipAddInput): InternalRelationship
  relationDelete(
    fromId: String
    toId: String
    relationship_type: String!
  ): Group
}

enum GroupsOrdering {
  name
  created_at
  updated_at
}

type Hash {
  algorithm: String!
  hash: String
}

scalar hash_String_NotNull_minLength_5

interface HashedObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  hashes: [Hash]
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input HashInput {
  algorithm: algorithm_String_NotNull_minLength_3!
  hash: hash_String_NotNull_minLength_5!
}

enum IdentitiesFilter {
  entity_type
  identity_class
  name
  aliases
  confidence
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}

input IdentitiesFiltering {
  key: IdentitiesFilter!
  values: [String]
  operator: String
}

enum IdentitiesOrdering {
  name
  created
  modified
  created_at
  updated_at
}

interface Identity {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  identity_class: String!
  name: String!
  description: String
  roles: [String]
  contact_information: String
  x_opencti_aliases: [String]
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input IdentityAddInput {
  type: IdentityType!
  stix_id: String
  name: String!
  description: String
  contact_information: String
  roles: [String]
  x_opencti_aliases: [String]
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  clientMutationId: String
  created: DateTime
  modified: DateTime
  update: Boolean
}

type IdentityConnection {
  pageInfo: PageInfo!
  edges: [IdentityEdge]
}

type IdentityEdge {
  cursor: String!
  node: Identity!
}

type IdentityEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Identity
  contextPatch(input: EditContext): Identity
  contextClean: Identity
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Identity
}

enum IdentityType {
  Sector
  Organization
  Individual
}

type Indicator implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  pattern_type: String
  pattern_version: String
  pattern: String
  name: String!
  description: String
  indicator_types: [String]
  valid_from: DateTime
  valid_until: DateTime
  x_opencti_score: Int
  x_opencti_detection: Boolean
  x_opencti_main_observable_type: String
  x_mitre_platforms: [String]
  killChainPhases: KillChainPhaseConnection
  observables: StixCyberObservableConnection
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input IndicatorAddInput {
  stix_id: String
  pattern_type: String!
  pattern_version: String
  pattern: String!
  name: name_String_NotNull_minLength_2!
  description: String
  indicator_types: [String]
  valid_from: DateTime
  valid_until: DateTime
  confidence: Int
  revoked: Boolean
  lang: String
  x_opencti_score: Int
  x_opencti_detection: Boolean
  x_opencti_main_observable_type: String
  x_mitre_platforms: [String]
  killChainPhases: [String]
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type IndicatorConnection {
  pageInfo: PageInfo!
  edges: [IndicatorEdge]
}

type IndicatorEdge {
  cursor: String!
  node: Indicator!
}

type IndicatorEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Indicator
  contextPatch(input: EditContext): Indicator
  contextClean: Indicator
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Indicator
}

enum IndicatorsFilter {
  name
  pattern_type
  pattern_version
  pattern
  x_opencti_main_observable_type
  x_opencti_score
  x_opencti_detection
  valid_from
  valid_until
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
  basedOn
  indicates
}

input IndicatorsFiltering {
  key: IndicatorsFilter!
  values: [String]
  operator: String
}

enum IndicatorsOrdering {
  pattern_type
  pattern_version
  pattern
  name
  indicator_types
  valid_from
  valid_until
  x_opencti_score
  x_opencti_detection
  confidence
  created
  modified
  created_at
  updated_at
}

type Individual implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Identity {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  identity_class: String!
  name: String!
  description: String
  contact_information: String
  roles: [String]
  x_opencti_aliases: [String]
  x_opencti_firstname: String
  x_opencti_lastname: String
  organizations: OrganizationConnection
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input IndividualAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String!
  contact_information: String
  roles: [String]
  x_opencti_aliases: [String]
  x_opencti_firstname: String
  x_opencti_lastname: String
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type IndividualConnection {
  pageInfo: PageInfo!
  edges: [IndividualEdge]
}

type IndividualEdge {
  cursor: String!
  node: Individual!
}

type IndividualEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Individual
  contextPatch(input: EditContext): Individual
  contextClean: Individual
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Individual
}

enum IndividualsFilter {
  name
  aliases
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}

input IndividualsFiltering {
  key: IndividualsFilter!
  values: [String]
  operator: String
}

enum IndividualsOrdering {
  name
  confidence
  firstname
  lastname
  created
  modified
}

type Infrastructure implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  name: String!
  aliases: [String]
  description: String
  infrastructure_types: String
  first_seen: DateTime
  last_seen: DateTime
  killChainPhases: KillChainPhaseConnection
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input InfrastructureAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String
  aliases: [String]
  infrastructure_types: [String]
  first_seen: DateTime
  last_seen: DateTime
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  killChainPhases: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type InfrastructureConnection {
  pageInfo: PageInfo!
  edges: [InfrastructureEdge]
}

type InfrastructureEdge {
  cursor: String!
  node: Infrastructure!
}

type InfrastructureEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Infrastructure
  contextPatch(input: EditContext): Infrastructure
  contextClean: Infrastructure
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Infrastructure
}

enum InfrastructuresFilter {
  name
  aliases
  infrastructure_types
  first_seen
  last_seen
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}

input InfrastructuresFiltering {
  key: InfrastructuresFilter!
  values: [String]
  operator: String
}

enum InfrastructuresOrdering {
  name
  infrastructure_types
  first_seen
  last_seen
  created
  modified
  created_at
  updated_at
}

interface InternalObject {
  id: ID!
  entity_type: String!
}

type InternalRelationship implements BasicRelationship {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  fromRole: String
  toRole: String
  created_at: DateTime!
  updated_at: DateTime!
  from: InternalObject
  to: InternalObject
}

input InternalRelationshipAddInput {
  relationship_type: String!
  fromId: ID
  toId: ID
}

type IntrusionSet implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  name: String!
  description: String
  aliases: [String]
  first_seen: DateTime
  last_seen: DateTime
  goals: [String]
  resource_level: String
  primary_motivation: String
  secondary_motivations: [String]
  locations: LocationConnection
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input IntrusionSetAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String!
  aliases: [String]
  first_seen: DateTime
  last_seen: DateTime
  goals: [String]
  resource_level: String
  primary_motivation: String
  secondary_motivations: [String]
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type IntrusionSetConnection {
  pageInfo: PageInfo!
  edges: [IntrusionSetEdge]
}

type IntrusionSetEdge {
  cursor: String!
  node: IntrusionSet!
}

type IntrusionSetEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): IntrusionSet
  contextPatch(input: EditContext): IntrusionSet
  contextClean: IntrusionSet
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): IntrusionSet
}

enum IntrusionSetsFilter {
  name
  aliases
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}

input IntrusionSetsFiltering {
  key: IntrusionSetsFilter!
  values: [String]
  operator: String
}

enum IntrusionSetsOrdering {
  name
  created
  modified
  created_at
  updated_at
}

type IPv4Addr implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  value: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input IPv4AddrAddInput {
  value: String
}

type IPv6Addr implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  value: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input IPv6AddrAddInput {
  value: String
}

type KillChainPhase implements BasicObject & StixObject & StixMetaObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  created: DateTime
  modified: DateTime
  kill_chain_name: String!
  phase_name: String!
  x_opencti_order: Int
  editContext: [EditUserContext]
}

input KillChainPhaseAddInput {
  stix_id: String
  kill_chain_name: String!
  phase_name: String!
  x_opencti_order: Int!
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type KillChainPhaseConnection {
  pageInfo: PageInfo!
  edges: [KillChainPhaseEdge]
}

type KillChainPhaseEdge {
  cursor: String!
  node: KillChainPhase!
}

type KillChainPhaseEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): KillChainPhase
  contextPatch(input: EditContext): KillChainPhase
  contextClean: KillChainPhase
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): KillChainPhase
}

enum KillChainPhasesFilter {
  kill_chain_name
  phase_name
}

input KillChainPhasesFiltering {
  key: KillChainPhasesFilter!
  values: [String]
  operator: String
}

enum KillChainPhasesOrdering {
  x_opencti_order
  kill_chain_name
  phase_name
  created
  modified
  created_at
  updated_at
}

type Label implements BasicObject & StixObject & StixMetaObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  created: DateTime
  modified: DateTime
  value: String
  color: String
  toStix: String
  editContext: [EditUserContext]
}

input LabelAddInput {
  stix_id: String
  value: String!
  color: String
  created: DateTime
  modified: DateTime
  clientMutationId: String
}

type LabelConnection {
  pageInfo: PageInfo!
  edges: [LabelEdge]
}

type LabelEdge {
  cursor: String!
  node: Label!
}

type LabelEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Label
  contextPatch(input: EditContext): Label
  contextClean: Label
}

enum LabelsFilter {
  value
  markedBy
}

input LabelsFiltering {
  key: LabelsFilter!
  values: [String]
  operator: String
}

enum LabelsOrdering {
  value
  color
  created
  modified
  created_at
  updated_at
}

interface Location {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  name: String!
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  x_opencti_aliases: [String]
}

input LocationAddInput {
  type: LocationType!
  stix_id: String
  name: String!
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  x_opencti_aliases: [String]
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  clientMutationId: String
  created: DateTime
  modified: DateTime
  update: Boolean
}

type LocationConnection {
  pageInfo: PageInfo!
  edges: [LocationEdge]
}

type LocationEdge {
  cursor: String!
  node: Location!
}

type LocationEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Location
  contextPatch(input: EditContext): Location
  contextClean: Location
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Location
}

enum LocationsFilter {
  entity_type
  name
  x_opencti_aliases
  confidence
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}

input LocationsFiltering {
  key: LocationsFilter!
  values: [String]
  operator: String
}

enum LocationsOrdering {
  name
  latitude
  longitude
  created
  modified
  created_at
  updated_at
}

enum LocationType {
  City
  Country
  Region
  Position
}

type Log {
  id: ID!
  event_type: String!
  timestamp: DateTime!
  user_id: String!
  user: User
  context_data: ContextData
}

type LogConnection {
  pageInfo: PageInfo!
  edges: [LogEdge]
}

type LogEdge {
  cursor: String!
  node: Log!
}

enum LogsFilter {
  event_type
  entity_id
  connection_id
  user_id
  applicant_id
}

input LogsFiltering {
  key: LogsFilter!
  values: [String]
  operator: String
}

enum LogsOrdering {
  event
  timestamp
}

type LogsWorkerConfig {
  elasticsearch_url: String!
  elasticsearch_index: String!
  rabbitmq_url: String!
}

type MacAddr implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  value: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input MacAddrAddInput {
  value: String
}

type Malware implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  name: String!
  description: String
  aliases: [String]
  malware_types: [String]
  is_family: Boolean
  first_seen: DateTime
  last_seen: DateTime
  architecture_execution_envs: [String]
  implementation_languages: [String]
  capabilities: [String]
  killChainPhases: KillChainPhaseConnection
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input MalwareAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String!
  malware_types: [String]
  aliases: [String]
  is_family: Boolean
  first_seen: DateTime
  last_seen: DateTime
  architecture_execution_envs: [String]
  implementation_languages: [String]
  capabilities: [String]
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  killChainPhases: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type MalwareConnection {
  pageInfo: PageInfo!
  edges: [MalwareEdge]
}

type MalwareEdge {
  cursor: String!
  node: Malware!
}

type MalwareEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Malware
  contextPatch(input: EditContext): Malware
  contextClean: Malware
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Malware
}

enum MalwaresFilter {
  name
  aliases
  malware_types
  first_seen
  last_seen
  is_family
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}

input MalwaresFiltering {
  key: MalwaresFilter!
  values: [String]
  operator: String
}

enum MalwaresOrdering {
  name
  malware_types
  first_seen
  last_seen
  created
  modified
  created_at
  updated_at
  objectMarking
  objectLabel
}

type MarkingDefinition implements BasicObject & StixObject & StixMetaObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  created: DateTime
  modified: DateTime
  definition_type: String
  definition: String
  x_opencti_order: Int!
  x_opencti_color: String
  toStix: String
  editContext: [EditUserContext]
}

input MarkingDefinitionAddInput {
  stix_id: String
  definition_type: String!
  definition: String!
  x_opencti_order: Int!
  x_opencti_color: String
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type MarkingDefinitionConnection {
  pageInfo: PageInfo!
  edges: [MarkingDefinitionEdge]
}

type MarkingDefinitionEdge {
  cursor: String!
  node: MarkingDefinition!
}

type MarkingDefinitionEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): MarkingDefinition
  contextPatch(input: EditContext): MarkingDefinition
  contextClean: MarkingDefinition
}

enum MarkingDefinitionsFilter {
  definition
  definition_type
  markedBy
}

input MarkingDefinitionsFiltering {
  key: MarkingDefinitionsFilter!
  values: [String]
  operator: String
}

enum MarkingDefinitionsOrdering {
  definition_type
  definition
  x_opencti_order
  x_opencti_color
  created
  modified
  created_at
  updated_at
}

type MessagesStats {
  ack: Int
  ack_details: AckDetails
}

type Mutation {
  deleteImport(fileName: String): Boolean
  uploadImport(file: Upload!): File
  askJobImport(fileName: ID!): File
  workAdd(connectorId: String!, friendlyName: String): Work!
  workEdit(id: ID!): WorkEditMutations
  token(input: UserLoginInput): String
  settingsEdit(id: ID!): SettingsEditMutations
  groupAdd(input: GroupAddInput): Group
  groupEdit(id: ID!): GroupEditMutations
  userAdd(input: UserAddInput): User
  userEdit(id: ID!): UserEditMutations
  meEdit(input: EditInput, operation: EditOperation): User
  logout: ID
  roleAdd(input: RoleAddInput): Role
  roleEdit(id: ID!): RoleEditMutations
  pingConnector(id: ID!, state: String): Connector
  registerConnector(input: RegisterConnectorInput): Connector
  resetStateConnector(id: ID!): Connector
  deleteConnector(id: ID!): ID!
  attributeAdd(input: AttributeAddInput): Attribute
  attributeEdit(id: ID!): AttributeEditMutations
  markingDefinitionAdd(input: MarkingDefinitionAddInput): MarkingDefinition
  markingDefinitionEdit(id: ID!): MarkingDefinitionEditMutations
  labelAdd(input: LabelAddInput): Label
  labelEdit(id: ID!): LabelEditMutations
  externalReferenceAdd(input: ExternalReferenceAddInput): ExternalReference
  externalReferenceEdit(id: ID!): ExternalReferenceEditMutations
  killChainPhaseAdd(input: KillChainPhaseAddInput): KillChainPhase
  killChainPhaseEdit(id: ID!): KillChainPhaseEditMutations
  stixCoreObjectEdit(id: ID!): StixCoreObjectEditMutations
  stixDomainObjectAdd(input: StixDomainObjectAddInput): StixDomainObject
  stixDomainObjectEdit(id: ID!): StixDomainObjectEditMutations
  stixDomainObjectsExportAsk(
    type: String!
    format: String!
    exportType: String!
    maxMarkingDefinition: String
    context: String
    search: String
    orderBy: StixDomainObjectsOrdering
    orderMode: OrderingMode
    filters: [StixDomainObjectsFiltering]
    filterMode: FilterMode
  ): FileConnection
  stixDomainObjectsMerge(
    keepedEntityId: ID!
    mergedEntityId: ID!
    mergeRelations: Boolean
    mergeAliases: Boolean
  ): StixDomainObject
  stixDomainObjectsDelete(id: [ID]!): [ID]!
  stixDomainObjectsExportPush(
    type: String!
    file: Upload!
    listFilters: String
  ): Boolean
  attackPatternAdd(input: AttackPatternAddInput): AttackPattern
  attackPatternEdit(id: ID!): AttackPatternEditMutations
  campaignAdd(input: CampaignAddInput): Campaign
  campaignEdit(id: ID!): CampaignEditMutations
  containerEdit(id: ID!): ContainerEditMutations
  noteAdd(input: NoteAddInput): Note
  noteEdit(id: ID!): NoteEditMutations
  observedDataAdd(input: ObservedDataAddInput): ObservedData
  observedDataEdit(id: ID!): ObservedDataEditMutations
  opinionAdd(input: OpinionAddInput): Opinion
  opinionEdit(id: ID!): OpinionEditMutations
  reportAdd(input: ReportAddInput): Report
  reportEdit(id: ID!): ReportEditMutations
  courseOfActionAdd(input: CourseOfActionAddInput): CourseOfAction
  courseOfActionEdit(id: ID!): CourseOfActionEditMutations
  identityAdd(input: IdentityAddInput): Identity
  identityEdit(id: ID!): IdentityEditMutations
  individualAdd(input: IndividualAddInput): Individual
  individualEdit(id: ID!): IndividualEditMutations
  organizationAdd(input: OrganizationAddInput): Organization
  organizationEdit(id: ID!): OrganizationEditMutations
  sectorAdd(input: SectorAddInput): Sector
  sectorEdit(id: ID!): SectorEditMutations
  indicatorAdd(input: IndicatorAddInput): Indicator
  indicatorEdit(id: ID!): IndicatorEditMutations
  infrastructureAdd(input: InfrastructureAddInput): Infrastructure
  infrastructureEdit(id: ID!): InfrastructureEditMutations
  intrusionSetAdd(input: IntrusionSetAddInput): IntrusionSet
  intrusionSetEdit(id: ID!): IntrusionSetEditMutations
  locationAdd(input: LocationAddInput): Location
  locationEdit(id: ID!): LocationEditMutations
  cityAdd(input: CityAddInput): City
  cityEdit(id: ID!): CityEditMutations
  countryAdd(input: CountryAddInput): Country
  countryEdit(id: ID!): CountryEditMutations
  regionAdd(input: RegionAddInput): Region
  regionEdit(id: ID!): RegionEditMutations
  positionAdd(input: PositionAddInput): Position
  positionEdit(id: ID!): PositionEditMutations
  malwareAdd(input: MalwareAddInput): Malware
  malwareEdit(id: ID!): MalwareEditMutations
  threatActorAdd(input: ThreatActorAddInput): ThreatActor
  threatActorEdit(id: ID!): ThreatActorEditMutations
  toolAdd(input: ToolAddInput): Tool
  toolEdit(id: ID!): ToolEditMutations
  vulnerabilityAdd(input: VulnerabilityAddInput): Vulnerability
  vulnerabilityEdit(id: ID!): VulnerabilityEditMutations
  xOpenCTIIncidentAdd(input: XOpenCTIIncidentAddInput): XOpenCTIIncident
  xOpenCTIIncidentEdit(id: ID!): XOpenCTIIncidentEditMutations
  stixCyberObservableAdd(
    type: String!
    stix_id: String
    x_opencti_score: Int
    x_opencti_description: String
    createIndicator: Boolean
    createdBy: String
    objectMarking: [String]
    objectLabel: [String]
    externalReferences: [String]
    clientMutationId: String
    update: Boolean
    AutonomousSystem: AutonomousSystemAddInput
    Directory: DirectoryAddInput
    DomainName: DomainNameAddInput
    EmailAddr: EmailAddrAddInput
    EmailMessage: EmailMessageAddInput
    EmailMimePartType: EmailMimePartTypeAddInput
    Artifact: ArtifactAddInput
    StixFile: StixFileAddInput
    X509Certificate: X509CertificateAddInput
    IPv4Addr: IPv4AddrAddInput
    IPv6Addr: IPv6AddrAddInput
    MacAddr: MacAddrAddInput
    Mutex: MutexAddInput
    NetworkTraffic: NetworkTrafficAddInput
    Process: ProcessAddInput
    Software: SoftwareAddInput
    Url: UrlAddInput
    UserAccount: UserAccountAddInput
    WindowsRegistryKey: WindowsRegistryKeyAddInput
    WindowsRegistryValueType: WindowsRegistryValueTypeAddInput
    X509V3ExtensionsType: X509V3ExtensionsTypeAddInput
    XOpenCTICryptographicKey: XOpenCTICryptographicKeyAddInput
    XOpenCTICryptocurrencyWallet: XOpenCTICryptocurrencyWalletAddInput
    XOpenCTIHostname: XOpenCTIHostnameAddInput
    XOpenCTIText: XOpenCTITextAddInput
    XOpenCTIUserAgent: XOpenCTIUserAgentAddInput
  ): StixCyberObservable
  stixCyberObservableEdit(id: ID!): StixCyberObservableEditMutations
  stixCyberObservablesExportAsk(
    format: String!
    exportType: String!
    maxMarkingDefinition: String
    context: String
    types: [String]
    search: String
    orderBy: StixCyberObservablesOrdering
    orderMode: OrderingMode
    filters: [StixCyberObservablesFiltering]
    filterMode: FilterMode
  ): FileConnection
  stixCyberObservablesExportPush(file: Upload!, listFilters: String): Boolean
  stixCoreRelationshipAdd(
    input: StixCoreRelationshipAddInput
    reversedReturn: Boolean
  ): StixCoreRelationship
  stixCoreRelationshipEdit(id: ID!): StixCoreRelationshipEditMutations
  stixCoreRelationshipDelete(
    fromId: String!
    toId: String!
    relationship_type: String!
  ): Boolean!
  stixCyberObservableRelationshipAdd(
    input: StixCyberObservableRelationshipAddInput
  ): StixCyberObservableRelationship
  stixCyberObservableRelationshipEdit(
    id: ID!
  ): StixCyberObservableRelationshipEditMutations
  stixSightingRelationshipAdd(
    input: StixSightingRelationshipAddInput
  ): StixSightingRelationship
  stixSightingRelationshipEdit(id: ID!): StixSightingRelationshipEditMutations
}

type Mutex implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  name: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input MutexAddInput {
  name: String
}

scalar name_String_NotNull_minLength_2

type NetworkTraffic implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  extensions: String
  start: DateTime
  end: DateTime
  is_active: Boolean
  src_port: Int
  dst_port: Int
  protocols: [String]
  src_byte_count: Int
  dst_byte_count: Int
  src_packets: Int
  dst_packets: Int
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input NetworkTrafficAddInput {
  extensions: String
  start: DateTime
  end: DateTime
  is_active: Boolean
  src_port: Int
  dst_port: Int
  protocols: [String]
  src_byte_count: Int
  dst_byte_count: Int
  src_packets: Int
  dst_packets: Int
}

type Note implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Container {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  objects(
    first: Int
    after: ID
    orderBy: StixObjectOrStixRelationshipsOrdering
    orderMode: OrderingMode
    filters: [StixObjectOrStixRelationshipsFiltering]
    filterMode: FilterMode
    search: String
    types: [String]
  ): StixObjectOrStixRelationshipConnection
  attribute_abstract: String
  content: String!
  authors: [String]
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input NoteAddInput {
  stix_id: String
  attribute_abstract: String!
  content: content_String_NotNull_minLength_2!
  authors: [String]
  revoked: Boolean
  lang: String
  confidence: Int
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  objects: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type NoteConnection {
  pageInfo: PageInfo!
  edges: [NoteEdge]
}

type NoteEdge {
  cursor: String!
  node: Note!
}

type NoteEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Note
  contextPatch(input: EditContext): Note
  contextClean: Note
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Note
}

enum NotesFilter {
  attribute_abstract
  content
  authors
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
  objectContains
}

input NotesFiltering {
  key: NotesFilter!
  values: [String]!
  operator: String
}

enum NotesOrdering {
  created
  modified
  created_at
  updated_at
  createdBy
}

type Number {
  total: Int!
  count: Int!
}

type ObjectTotals {
  channels: Int
  consumers: Int
  queues: Int
}

type ObservedData implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Container {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  objects(
    first: Int
    after: ID
    orderBy: StixObjectOrStixRelationshipsOrdering
    orderMode: OrderingMode
    filters: [StixObjectOrStixRelationshipsFiltering]
    filterMode: FilterMode
    search: String
    types: [String]
  ): StixObjectOrStixRelationshipConnection
  first_observed: DateTime!
  last_observed: DateTime!
  number_observed: Int!
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input ObservedDataAddInput {
  stix_id: String
  first_observed: DateTime
  last_observed: DateTime
  number_observed: Int
  revoked: Boolean
  lang: String
  confidence: Int
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  objects: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type ObservedDataConnection {
  pageInfo: PageInfo!
  edges: [ObservedDataEdge]
}

type ObservedDataEdge {
  cursor: String!
  node: ObservedData!
}

type ObservedDataEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): ObservedData
  contextPatch(input: EditContext): ObservedData
  contextClean: ObservedData
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): ObservedData
}

enum ObservedDatasFilter {
  first_observed
  last_observed
  number_observed
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
  objectContains
}

input ObservedDatasFiltering {
  key: ObservedDatasFilter!
  values: [String]!
  operator: String
}

enum ObservedDatasOrdering {
  first_observed
  last_observed
  number_observed
  created
  modified
  created_at
  updated_at
  createdBy
}

type Opinion implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Container {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  objects(
    first: Int
    after: ID
    orderBy: StixObjectOrStixRelationshipsOrdering
    orderMode: OrderingMode
    filters: [StixObjectOrStixRelationshipsFiltering]
    filterMode: FilterMode
    search: String
    types: [String]
  ): StixObjectOrStixRelationshipConnection
  explanation: String
  authors: [String]
  opinion: String!
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input OpinionAddInput {
  stix_id: String
  opinion: String!
  explanation: String
  authors: [String]
  revoked: Boolean
  lang: String
  confidence: Int
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  objects: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type OpinionConnection {
  pageInfo: PageInfo!
  edges: [OpinionEdge]
}

type OpinionEdge {
  cursor: String!
  node: Opinion!
}

type OpinionEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Opinion
  contextPatch(input: EditContext): Opinion
  contextClean: Opinion
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Opinion
}

enum OpinionsFilter {
  explanation
  authors
  opinion
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
  objectContains
}

input OpinionsFiltering {
  key: OpinionsFilter!
  values: [String]!
  operator: String
}

enum OpinionsOrdering {
  created
  modified
  created_at
  updated_at
  createdBy
}

enum OrderingMode {
  asc
  desc
}

type Organization implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Identity {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  identity_class: String!
  name: String!
  description: String
  contact_information: String
  roles: [String]
  x_opencti_aliases: [String]
  x_opencti_organization_type: String
  x_opencti_reliability: OrganizationReliability
  sectors: SectorConnection
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input OrganizationAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String!
  contact_information: String
  roles: [String]
  x_opencti_aliases: [String]
  confidence: Int
  revoked: Boolean
  lang: String
  x_opencti_organization_type: String
  x_opencti_reliability: OrganizationReliability
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type OrganizationConnection {
  pageInfo: PageInfo!
  edges: [OrganizationEdge]
}

type OrganizationEdge {
  cursor: String!
  node: Organization!
}

type OrganizationEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Organization
  contextPatch(input: EditContext): Organization
  contextClean: Organization
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Organization
}

union OrganizationOrIndividual = Organization | Individual
enum OrganizationReliability {
  A
  B
  C
  D
  E
  F
}

enum OrganizationsFilter {
  name
  aliases
  x_opencti_organization_type
  x_opencti_reliability
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}

input OrganizationsFiltering {
  key: OrganizationsFilter!
  values: [String]
  operator: String
}

enum OrganizationsOrdering {
  name
  confidence
  created
  modified
  x_opencti_organization_type
}

type OverviewMetrics {
  node: String
  object_totals: ObjectTotals
  queue_totals: QueueTotals
  message_stats: MessagesStats
}

type PageInfo {
  startCursor: String!
  endCursor: String!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  globalCount: Int!
}

type Position implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Location {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  name: String!
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  x_opencti_aliases: [String]
  street_address: String
  postal_code: String
  city: City
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input PositionAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  street_address: String
  postal_code: String
  confidence: Int
  revoked: Boolean
  lang: String
  x_opencti_aliases: [String]
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type PositionConnection {
  pageInfo: PageInfo!
  edges: [PositionEdge]
}

type PositionEdge {
  cursor: String!
  node: Position!
}

type PositionEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Position
  contextPatch(input: EditContext): Position
  contextClean: Position
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Position
}

enum PositionsFilter {
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}

input PositionsFiltering {
  key: PositionsFilter!
  values: [String]
  operator: String
}

enum PositionsOrdering {
  postal_address
  postal_code
  created
  modified
  created_at
  updated_at
}

type Process implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  extensions: String
  is_hidden: Boolean
  pid: Int
  created_time: DateTime
  cwd: String
  command_line: String
  environment_variables: [String]
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input ProcessAddInput {
  extensions: String
  is_hidden: Boolean
  pid: Int
  created_time: DateTime
  cwd: String
  command_line: String
  environment_variables: [String]
}

type Provider {
  name: String!
  type: String
  provider: String
}

type Query {
  platform_demo: Boolean
  about: AppInfo
  logsWorkerConfig: LogsWorkerConfig
  rabbitMQMetrics(prefix: String): RabbitMQMetrics
  logs(
    first: Int
    after: ID
    orderBy: LogsOrdering
    orderMode: OrderingMode
    filters: [LogsFiltering]
    filterMode: FilterMode
    search: String
  ): LogConnection
  logsTimeSeries(
    userId: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries]
  subTypes(
    first: Int
    after: ID
    orderBy: SubTypesOrdering
    orderMode: OrderingMode
    type: String!
    includeParents: Boolean
    search: String
  ): SubTypeConnection
  importFiles(first: Int): FileConnection
  settings: Settings
  group(id: String!): Group
  groups(
    first: Int
    after: ID
    orderBy: GroupsOrdering
    orderMode: OrderingMode
    search: String
  ): GroupConnection
  roles(
    first: Int
    after: ID
    orderBy: RolesOrdering
    orderMode: OrderingMode
    search: String
  ): RoleConnection
  me: User
  user(id: String!): User
  users(
    first: Int
    after: ID
    orderBy: UsersOrdering
    orderMode: OrderingMode
    filters: [UsersFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): UserConnection
  role(id: String!): Role
  capabilities(first: Int): CapabilityConnection
  connector(id: String!): Connector
  connectors: [Connector]
  connectorsForExport: [Connector]
  connectorsForImport: [Connector]
  works(
    first: Int
    after: ID
    orderBy: WorksOrdering
    orderMode: OrderingMode
    search: String
    filters: [WorksFiltering]
    filterMode: FilterMode
  ): WorkConnection
  attribute(id: String): Attribute
  attributes(
    first: Int
    after: ID
    orderBy: AttributesOrdering
    orderMode: OrderingMode
    key: String
    elementType: String
    search: String
  ): AttributeConnection
  markingDefinition(id: String!): MarkingDefinition
  markingDefinitions(
    first: Int
    after: ID
    orderBy: MarkingDefinitionsOrdering
    orderMode: OrderingMode
    filters: [MarkingDefinitionsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): MarkingDefinitionConnection
  label(id: String!): Label
  labels(
    first: Int
    after: ID
    orderBy: LabelsOrdering
    orderMode: OrderingMode
    filters: [LabelsFiltering]
    filterMode: FilterMode
    search: String
  ): LabelConnection
  externalReference(id: String!): ExternalReference
  externalReferences(
    first: Int
    after: ID
    orderBy: ExternalReferencesOrdering
    orderMode: OrderingMode
    filters: [ExternalReferencesFiltering]
    filterMode: FilterMode
    search: String
  ): ExternalReferenceConnection
  killChainPhase(id: String!): KillChainPhase
  killChainPhases(
    first: Int
    after: ID
    orderBy: KillChainPhasesOrdering
    orderMode: OrderingMode
    filters: [KillChainPhasesFiltering]
    filterMode: FilterMode
    search: String
  ): KillChainPhaseConnection
  stixCoreObjectRaw(id: String!): String
  stixCoreObject(id: String!): StixCoreObject
  stixCoreObjects(
    first: Int
    after: ID
    types: [String]
    orderBy: StixCoreObjectsOrdering
    orderMode: OrderingMode
    filters: [StixCoreObjectsFiltering]
    filterMode: FilterMode
    search: String
  ): StixCoreObjectConnection
  stixDomainObject(id: String!): StixDomainObject
  stixDomainObjects(
    first: Int
    after: ID
    types: [String]
    orderBy: StixDomainObjectsOrdering
    orderMode: OrderingMode
    filters: [StixDomainObjectsFiltering]
    filterMode: FilterMode
    search: String
  ): StixDomainObjectConnection
  stixDomainObjectsExportFiles(first: Int, type: String!): FileConnection
  stixDomainObjectsTimeSeries(
    type: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries]
  stixDomainObjectsNumber(types: [String], endDate: DateTime): Number
  stixDomainObjectsDistribution(
    objectId: String
    relationship_type: String!
    toTypes: [String]
    field: String!
    operation: StatsOperation!
    limit: Int
    order: String
  ): [Distribution]
  attackPattern(id: String): AttackPattern
  attackPatterns(
    first: Int
    after: ID
    orderBy: AttackPatternsOrdering
    orderMode: OrderingMode
    filters: [AttackPatternsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): AttackPatternConnection
  campaign(id: String): Campaign
  campaigns(
    first: Int
    after: ID
    orderBy: CampaignsOrdering
    orderMode: OrderingMode
    filters: [CampaignsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): CampaignConnection
  campaignsTimeSeries(
    objectId: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
    relationship_type: String
  ): [TimeSeries]
  container(id: String): Container
  containers(
    first: Int
    after: ID
    orderBy: ContainersOrdering
    orderMode: OrderingMode
    filters: [ContainersFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): ContainerConnection
  note(id: String): Note
  notes(
    first: Int
    after: ID
    orderBy: NotesOrdering
    orderMode: OrderingMode
    filters: [NotesFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): NoteConnection
  notesTimeSeries(
    objectId: String
    authorId: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries]
  notesNumber(objectId: String, endDate: DateTime): Number
  notesDistribution(
    objectId: String
    field: String!
    operation: StatsOperation!
    limit: Int
    order: String
  ): [Distribution]
  noteContainsStixObjectOrStixRelationship(
    id: String!
    stixObjectOrStixRelationshipId: String!
  ): Boolean
  observedData(id: String): ObservedData
  observedDatas(
    first: Int
    after: ID
    orderBy: ObservedDatasOrdering
    orderMode: OrderingMode
    filters: [ObservedDatasFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): ObservedDataConnection
  observedDatasTimeSeries(
    objectId: String
    authorId: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries]
  observedDatasNumber(objectId: String, endDate: DateTime): Number
  observedDatasDistribution(
    objectId: String
    field: String!
    operation: StatsOperation!
    limit: Int
    order: String
  ): [Distribution]
  observedDataContainsStixObjectOrStixRelationship(
    id: String!
    stixObjectOrStixRelationshipId: String!
  ): Boolean
  opinion(id: String): Opinion
  opinions(
    first: Int
    after: ID
    orderBy: OpinionsOrdering
    orderMode: OrderingMode
    filters: [OpinionsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): OpinionConnection
  opinionsTimeSeries(
    objectId: String
    authorId: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries]
  opinionsNumber(objectId: String, endDate: DateTime): Number
  opinionsDistribution(
    objectId: String
    field: String!
    operation: StatsOperation!
    limit: Int
    order: String
  ): [Distribution]
  opinionContainsStixObjectOrStixRelationship(
    id: String!
    stixObjectOrStixRelationshipId: String!
  ): Boolean
  report(id: String): Report
  reports(
    first: Int
    after: ID
    orderBy: ReportsOrdering
    orderMode: OrderingMode
    filters: [ReportsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): ReportConnection
  reportsTimeSeries(
    objectId: String
    authorId: String
    reportType: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries]
  reportsNumber(reportType: String, objectId: String, endDate: DateTime): Number
  reportsDistribution(
    objectId: String
    field: String!
    operation: StatsOperation!
    limit: Int
    order: String
  ): [Distribution]
  reportContainsStixObjectOrStixRelationship(
    id: String!
    stixObjectOrStixRelationshipId: String!
  ): Boolean
  courseOfAction(id: String): CourseOfAction
  coursesOfAction(
    first: Int
    after: ID
    orderBy: CoursesOfActionOrdering
    orderMode: OrderingMode
    filters: [CoursesOfActionFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): CourseOfActionConnection
  identity(id: String!): Identity
  identities(
    first: Int
    after: ID
    types: [String]
    orderBy: IdentitiesOrdering
    orderMode: OrderingMode
    search: String
    filters: [IdentitiesFiltering]
    filterMode: FilterMode
    toStix: Boolean
  ): IdentityConnection
  individual(id: String!): Individual
  individuals(
    first: Int
    after: ID
    orderBy: IndividualsOrdering
    orderMode: OrderingMode
    filters: [IndividualsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): IndividualConnection
  organization(id: String): Organization
  organizations(
    first: Int
    after: ID
    orderBy: OrganizationsOrdering
    orderMode: OrderingMode
    filters: [OrganizationsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): OrganizationConnection
  sector(id: String): Sector
  sectors(
    first: Int
    after: ID
    orderBy: SectorsOrdering
    orderMode: OrderingMode
    filters: [SectorsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): SectorConnection
  indicator(id: String!): Indicator
  indicators(
    first: Int
    after: ID
    orderBy: IndicatorsOrdering
    orderMode: OrderingMode
    filters: [IndicatorsFiltering]
    filterMode: FilterMode
    search: String
  ): IndicatorConnection
  infrastructure(id: String!): Infrastructure
  infrastructures(
    first: Int
    after: ID
    orderBy: InfrastructuresOrdering
    orderMode: OrderingMode
    filters: [InfrastructuresFiltering]
    filterMode: FilterMode
    search: String
  ): InfrastructureConnection
  intrusionSet(id: String): IntrusionSet
  intrusionSets(
    first: Int
    after: ID
    orderBy: IntrusionSetsOrdering
    orderMode: OrderingMode
    filters: [IntrusionSetsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): IntrusionSetConnection
  location(id: String!): Location
  locations(
    first: Int
    after: ID
    types: [String]
    orderBy: LocationsOrdering
    orderMode: OrderingMode
    search: String
    filters: [LocationsFiltering]
    filterMode: FilterMode
    toStix: Boolean
  ): LocationConnection
  city(id: String): City
  cities(
    first: Int
    after: ID
    orderBy: CitiesOrdering
    orderMode: OrderingMode
    filters: [CitiesFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): CityConnection
  country(id: String): Country
  countries(
    first: Int
    after: ID
    orderBy: CountriesOrdering
    orderMode: OrderingMode
    filters: [CountriesFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): CountryConnection
  region(id: String!): Region
  regions(
    first: Int
    after: ID
    orderBy: RegionsOrdering
    orderMode: OrderingMode
    filters: [RegionsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): RegionConnection
  position(id: String!): Region
  positions(
    first: Int
    after: ID
    orderBy: PositionsOrdering
    orderMode: OrderingMode
    filters: [PositionsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): PositionConnection
  malware(id: String): Malware
  malwares(
    first: Int
    after: ID
    orderBy: MalwaresOrdering
    orderMode: OrderingMode
    filters: [MalwaresFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): MalwareConnection
  threatActor(id: String): ThreatActor
  threatActors(
    first: Int
    after: ID
    orderBy: ThreatActorsOrdering
    orderMode: OrderingMode
    filters: [ThreatActorsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): ThreatActorConnection
  tool(id: String): Tool
  tools(
    first: Int
    after: ID
    orderBy: ToolsOrdering
    orderMode: OrderingMode
    filters: [ToolsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): ToolConnection
  vulnerability(id: String): Vulnerability
  vulnerabilities(
    first: Int
    after: ID
    orderBy: VulnerabilitiesOrdering
    orderMode: OrderingMode
    filters: [VulnerabilitiesFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): VulnerabilityConnection
  xOpenCTIIncident(id: String): XOpenCTIIncident
  xOpenCTIIncidents(
    first: Int
    after: ID
    orderBy: XOpenCTIIncidentsOrdering
    orderMode: OrderingMode
    filters: [XOpenCTIIncidentsFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): XOpenCTIIncidentConnection
  xOpenCTIIncidentsTimeSeries(
    objectId: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
    relationship_type: String
  ): [TimeSeries]
  stixCyberObservable(id: String!): StixCyberObservable
  stixCyberObservables(
    first: Int
    after: ID
    types: [String]
    orderBy: StixCyberObservablesOrdering
    orderMode: OrderingMode
    filters: [StixCyberObservablesFiltering]
    filterMode: FilterMode
    search: String
    toStix: Boolean
  ): StixCyberObservableConnection
  stixCyberObservablesExportFiles(first: Int, context: String): FileConnection
  stixCyberObservablesNumber(types: [String], endDate: DateTime): Number
  stixCyberObservablesTimeSeries(type: String): [TimeSeries]
  stixCyberObservablesDistribution(
    objectId: String
    field: String!
    operation: String!
  ): [Distribution]
  stixMetaRelationshipsDistribution(
    field: String!
    operation: StatsOperation!
    relationship_type: String
    toTypes: [String]
    startDate: DateTime
    endDate: DateTime
    limit: Int
    order: String
  ): [Distribution]
  stixMetaRelationshipsNumber(
    type: String
    fromId: String
    endDate: DateTime
  ): Number
  stixCoreRelationship(id: String): StixCoreRelationship
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    fromRole: String
    fromTypes: [String]
    toId: String
    toRole: String
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
    stix: Boolean
  ): StixCoreRelationshipConnection
  stixCoreRelationshipsOfElement(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    elementId: String!
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
    stix: Boolean
  ): StixCoreRelationshipConnection
  stixCoreRelationshipsTimeSeries(
    fromId: String
    relationship_type: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries]
  stixCoreRelationshipsDistribution(
    fromId: String
    field: String!
    operation: StatsOperation!
    relationship_type: String
    toTypes: [String]
    isTo: Boolean
    noDirection: Boolean
    startDate: DateTime
    endDate: DateTime
    dateAttribute: String
    limit: Int
    order: String
  ): [Distribution]
  stixCoreRelationshipsNumber(
    type: String
    fromId: String
    toTypes: [String]
    noDirection: Boolean
    endDate: DateTime
  ): Number
  stixSightingRelationship(id: String): StixSightingRelationship
  stixSightingRelationships(
    first: Int
    after: ID
    orderBy: StixSightingRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    search: String
    filters: [StixSightingRelationshipsFiltering]
    filterMode: FilterMode
    toStix: Boolean
  ): StixSightingRelationshipConnection
  stixSightingRelationshipsTimeSeries(
    fromId: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries]
  stixSightingRelationshipsDistribution(
    fromId: String!
    field: String!
    operation: StatsOperation!
    toTypes: [String]
    startDate: DateTime
    endDate: DateTime
    limit: Int
    order: String
  ): [Distribution]
  stixSightingRelationshipsNumber(fromId: String, endDate: DateTime): Number
  stixCyberObservableRelationship(id: String): StixCyberObservableRelationship
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
    toStix: Boolean
  ): StixCyberObservableRelationshipConnection
  stixCyberObservableRelationshipsOfElement(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    elementId: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
    toStix: Boolean
  ): StixCyberObservableRelationshipConnection
  stixCyberObservableRelationshipsTimeSeries(
    fromId: String
    field: String!
    operation: StatsOperation!
    startDate: DateTime!
    endDate: DateTime!
    interval: String!
  ): [TimeSeries]
  stixCyberObservableRelationshipsDistribution(
    fromId: String!
    field: String!
    operation: StatsOperation!
    toTypes: [String]
    startDate: DateTime
    endDate: DateTime
    limit: Int
    order: String
  ): [Distribution]
  stixCyberObservableRelationshipsNumber(
    fromId: String
    endDate: DateTime
  ): Number
  stixObjectOrStixRelationship(id: String!): StixObjectOrStixRelationship
  stixCoreObjectOrStixCoreRelationship(
    id: String!
  ): StixCoreObjectOrStixCoreRelationship
}

type QueueArguments {
  config: String
}

type QueueMetrics {
  name: String!
  arguments: QueueArguments
  messages: Int
  messages_ready: Int
  messages_unacknowledged: Int
  consumers: Int
  idle_since: DateTime
  message_stats: MessagesStats
}

type QueueTotals {
  messages: Int
  messages_ready: Int
  messages_unacknowledged: Int
}

type RabbitMQMetrics {
  consumers: Int
  queues: [QueueMetrics]
  overview: OverviewMetrics
}

type Region implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Location {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  name: String!
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  x_opencti_aliases: [String]
  parentRegions: RegionConnection
  subRegions: RegionConnection
  isSubRegion: Boolean
  countries: CountryConnection
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input RegionAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String
  latitude: Float
  longitude: Float
  precision: Float
  confidence: Int
  revoked: Boolean
  lang: String
  x_opencti_aliases: [String]
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type RegionConnection {
  pageInfo: PageInfo!
  edges: [RegionEdge]
}

type RegionEdge {
  cursor: String!
  node: Region!
}

type RegionEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Region
  contextPatch(input: EditContext): Region
  contextClean: Region
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Region
}

enum RegionsFilter {
  created
  modified
  created_at
  createdBy
  markedBy
  labelledBy
}

input RegionsFiltering {
  key: RegionsFilter!
  values: [String]
  operator: String
}

enum RegionsOrdering {
  name
  description
  created
  modified
  created_at
  updated_at
}

input RegisterConnectorInput {
  id: ID!
  name: String!
  type: ConnectorType!
  scope: [String!]
  auto: Boolean
}

type Report implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Container {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  objects(
    first: Int
    after: ID
    orderBy: StixObjectOrStixRelationshipsOrdering
    orderMode: OrderingMode
    filters: [StixObjectOrStixRelationshipsFiltering]
    filterMode: FilterMode
    search: String
    types: [String]
  ): StixObjectOrStixRelationshipConnection
  name: String!
  description: String
  report_types: [String]
  published: DateTime
  x_opencti_graph_data: String
  x_opencti_report_status: Int
  creator: User
  toStix: String
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  editContext: [EditUserContext]
}

input ReportAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String
  published: DateTime!
  report_types: [String]
  x_opencti_graph_data: String
  x_opencti_report_status: Int
  revoked: Boolean
  lang: String
  confidence: Int
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  objects: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type ReportConnection {
  pageInfo: PageInfo!
  edges: [ReportEdge]
}

type ReportEdge {
  cursor: String!
  node: Report!
}

type ReportEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Report
  contextPatch(input: EditContext): Report
  contextClean: Report
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Report
}

enum ReportsFilter {
  name
  published
  published_day
  created
  created_at
  report_types
  x_opencti_report_status
  confidence
  objectLabel
  createdBy
  markedBy
  labelledBy
  objectContains
}

input ReportsFiltering {
  key: ReportsFilter!
  values: [String]!
  operator: String
}

enum ReportsOrdering {
  name
  created
  modified
  published
  x_opencti_report_status
  created_at
  updated_at
  createdBy
}

type Role implements BasicObject & InternalObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  name: String!
  default_assignation: Boolean
  description: String
  created_at: DateTime!
  updated_at: DateTime!
  capabilities: [Capability]
  editContext: [EditUserContext]
}

input RoleAddInput {
  name: String!
  description: String
  clientMutationId: String
}

type RoleConnection {
  pageInfo: PageInfo!
  edges: [RoleEdge]
}

type RoleEdge {
  cursor: String!
  node: Role!
}

type RoleEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Role
  contextPatch(input: EditContext): Role
  contextClean: Role
  relationAdd(input: InternalRelationshipAddInput): InternalRelationship
  relationDelete(toId: String!, relationship_type: String!): Role
}

enum RolesOrdering {
  name
  created_at
  updated_at
}

type Sector implements BasicObject & StixObject & StixCoreObject & StixDomainObject & Identity {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  identity_class: String!
  name: String!
  description: String
  contact_information: String
  roles: [String]
  x_opencti_aliases: [String]
  parentSectors: SectorConnection
  subSectors: SectorConnection
  isSubSector: Boolean
  targetedOrganizations: StixCoreRelationshipConnection
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input SectorAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String!
  contact_information: String
  roles: [String]
  x_opencti_aliases: [String]
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type SectorConnection {
  pageInfo: PageInfo!
  edges: [SectorEdge]
}

type SectorEdge {
  cursor: String!
  node: Sector!
}

type SectorEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Sector
  contextPatch(input: EditContext): Sector
  contextClean: Sector
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Sector
}

enum SectorsFilter {
  name
  confidence
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
  partOf
}

input SectorsFiltering {
  key: SectorsFilter!
  values: [String]
  operator: String
}

enum SectorsOrdering {
  name
  description
  confidence
  created
  modified
  created_at
  updated_at
}

type Settings implements InternalObject & BasicObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  platform_title: String
  platform_email: String
  platform_url: String
  platform_providers: [Provider]
  platform_language: String
  platform_parameters: String
  platform_demo: Boolean
  platform_map_tile_server: String
  created_at: DateTime!
  updated_at: DateTime!
  editContext: [EditUserContext]
}

type SettingsEditMutations {
  fieldPatch(input: EditInput): Settings
  contextPatch(input: EditContext): Settings
  contextClean: Settings
}

type Software implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  name: String
  cpe: String
  swid: String
  languages: [String]
  vendor: String
  version: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input SoftwareAddInput {
  name: String
  cpe: String
  swid: String
  languages: [String]
  vendor: String
  version: String
}

enum StatsOperation {
  count
  sum
}

enum Status {
  wait
  progress
  complete
}

interface StixCoreObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  creator: User
  toStix: String
  editContext: [EditUserContext]
}

type StixCoreObjectConnection {
  pageInfo: PageInfo!
  edges: [StixCoreObjectEdge]
}

type StixCoreObjectEdge {
  cursor: String!
  node: StixCoreObject!
}

type StixCoreObjectEditMutations {
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationsAdd(input: StixMetaRelationshipsAddInput): StixCoreObject
  relationDelete(toId: String!, relationship_type: String!): StixCoreObject
  merge(stixCoreObjectsIds: [String]!): StixDomainObject
}

union StixCoreObjectOrStixCoreRelationship =
    AttackPattern
  | Campaign
  | Note
  | ObservedData
  | Opinion
  | Report
  | CourseOfAction
  | Individual
  | Organization
  | Sector
  | Indicator
  | Infrastructure
  | IntrusionSet
  | City
  | Country
  | Region
  | Position
  | Malware
  | ThreatActor
  | Tool
  | Vulnerability
  | XOpenCTIIncident
  | AutonomousSystem
  | Directory
  | DomainName
  | EmailAddr
  | EmailMessage
  | EmailMimePartType
  | Artifact
  | StixFile
  | X509Certificate
  | IPv4Addr
  | IPv6Addr
  | MacAddr
  | Mutex
  | NetworkTraffic
  | Process
  | Software
  | Url
  | UserAccount
  | WindowsRegistryKey
  | WindowsRegistryValueType
  | X509V3ExtensionsType
  | XOpenCTICryptographicKey
  | XOpenCTICryptocurrencyWallet
  | XOpenCTIHostname
  | XOpenCTIText
  | XOpenCTIUserAgent
  | StixCoreRelationship
enum StixCoreObjectsFilter {
  name
  created
  modified
  created_at
  createdBy
  markedBy
  labelledBy
  hasExternalReference
  objectContains
  indicates
  confidence
}

input StixCoreObjectsFiltering {
  key: StixCoreObjectsFilter!
  values: [String]
  operator: String
}

enum StixCoreObjectsOrdering {
  name
  entity_type
  created
  modified
  created_at
  updated_at
  published
  object_status
  valid_from
  valid_to
  indicator_pattern
}

type StixCoreRelationship implements BasicRelationship & StixRelationship {
  id: ID!
  entity_type: String!
  parent_types: [String]!
  fromRole: String
  toRole: String
  created_at: DateTime!
  updated_at: DateTime!
  standard_id: String!
  x_opencti_stix_ids: [String]
  from: StixObjectOrStixRelationship
  to: StixObjectOrStixRelationship
  spec_version: String!
  relationship_type: String!
  description: String
  start_time: DateTime
  stop_time: DateTime
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  killChainPhases: KillChainPhaseConnection
  creator: User
  toStix: String
  editContext: [EditUserContext]
}

input StixCoreRelationshipAddInput {
  stix_id: String
  fromId: String!
  toId: String!
  relationship_type: String!
  description: String
  start_time: DateTime
  stop_time: DateTime
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  killChainPhases: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type StixCoreRelationshipConnection {
  pageInfo: PageInfo!
  edges: [StixCoreRelationshipEdge]
}

type StixCoreRelationshipEdge {
  cursor: String!
  node: StixCoreRelationship!
}

type StixCoreRelationshipEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): StixCoreRelationship
  contextPatch(input: EditContext): StixCoreRelationship
  contextClean: StixCoreRelationship
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(
    toId: String!
    relationship_type: String!
  ): StixCoreRelationship
}

enum StixCoreRelationshipsFilter {
  created
  modified
  created_at
  confidence
  createdBy
  markedBy
  labelledBy
  toName
  toCreatedAt
  toPatternType
  toMainObservableType
}

input StixCoreRelationshipsFiltering {
  key: StixCoreRelationshipsFilter!
  values: [String]
  operator: String
}

enum StixCoreRelationshipsOrdering {
  entity_type
  confidence
  start_time
  stop_time
  created
  modified
  created_at
  updated_at
  objectMarking
  objectLabel
  killChainPhase
  toName
  toValidFrom
  toValidUntil
  toPatternType
}

interface StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

type StixCyberObservableConnection {
  pageInfo: PageInfo!
  edges: [StixCyberObservableEdge]
}

type StixCyberObservableEdge {
  cursor: String!
  node: StixCyberObservable!
}

type StixCyberObservableEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): StixCyberObservable
  contextPatch(input: EditContext): StixCyberObservable
  contextClean: StixCyberObservable
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationsAdd(input: StixMetaRelationshipsAddInput): StixCyberObservable
  relationDelete(toId: String!, relationship_type: String!): StixCyberObservable
  askEnrichment(connectorId: ID!): Work
}

type StixCyberObservableRelationship implements BasicRelationship & StixRelationship {
  id: ID!
  entity_type: String!
  parent_types: [String]!
  fromRole: String
  toRole: String
  created_at: DateTime!
  updated_at: DateTime!
  standard_id: String!
  x_opencti_stix_ids: [String]
  spec_version: String!
  from: StixObjectOrStixRelationship
  to: StixObjectOrStixRelationship
  relationship_type: String!
  start_time: DateTime
  stop_time: DateTime
  editContext: [EditUserContext]
}

input StixCyberObservableRelationshipAddInput {
  stix_id: String
  fromId: String!
  toId: String!
  relationship_type: String!
  confidence: Int
  createdBy: String
  start_time: DateTime
  stop_time: DateTime
  objectMarking: [String]
  objectLabel: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type StixCyberObservableRelationshipConnection {
  pageInfo: PageInfo!
  edges: [StixCyberObservableRelationshipEdge]
}

type StixCyberObservableRelationshipEdge {
  cursor: String!
  node: StixCyberObservableRelationship!
}

type StixCyberObservableRelationshipEditMutations {
  delete: ID
  fieldPatch(
    input: EditInput
    operation: EditOperation
  ): StixCyberObservableRelationship
  contextPatch(input: EditContext): StixCyberObservableRelationship
  contextClean: StixCyberObservableRelationship
}

enum StixCyberObservableRelationshipsFilter {
  created_at
}

input StixCyberObservableRelationshipsFiltering {
  key: StixCyberObservableRelationshipsFilter!
  values: [String]
  operator: String
}

enum StixCyberObservableRelationshipsOrdering {
  entity_type
  confidence
  start_time
  stop_time
  created
  modified
  created_at
  updated_at
  toName
  toValidFrom
  toValidUntil
  toPatternType
  toCreatedAt
}

enum StixCyberObservablesFilter {
  entity_type
  observable_value
  x_opencti_score
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
  relatedTo
  objectContained
  hasExternalReference
}

input StixCyberObservablesFiltering {
  key: StixCyberObservablesFilter!
  values: [String]
  operator: String
}

enum StixCyberObservablesOrdering {
  entity_type
  created_at
  updated_at
}

interface StixDomainObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  creator: User
  toStix: String
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  editContext: [EditUserContext]
}

input StixDomainObjectAddInput {
  stix_id: String
  name: String
  description: String
  confidence: Int
  aliases: [String]
  x_opencti_aliases: [String]
  type: String!
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  killChainPhases: [String]
  externalReferences: [String]
  object: [String]
  clientMutationId: String
  created: DateTime
  modified: DateTime
  update: Boolean
}

type StixDomainObjectConnection {
  pageInfo: PageInfo!
  edges: [StixDomainObjectEdge]
}

type StixDomainObjectEdge {
  cursor: String!
  node: StixDomainObject!
}

type StixDomainObjectEditMutations {
  delete: ID
  changeType(newType: String!): StixDomainObject
  fieldPatch(input: EditInput, operation: EditOperation): StixDomainObject
  contextPatch(input: EditContext): StixDomainObject
  contextClean: StixDomainObject
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationsAdd(input: StixMetaRelationshipsAddInput): StixDomainObject
  relationDelete(toId: String!, relationship_type: String): StixDomainObject
  importPush(file: Upload!): File
  exportAsk(
    format: String!
    exportType: String!
    maxMarkingDefinition: String
  ): [File]
  exportPush(file: Upload!): Boolean
}

enum StixDomainObjectsFilter {
  name
  aliases
  x_opencti_aliases
  created
  modified
  created_at
  createdBy
  markedBy
  labelledBy
  hasExternalReference
  objectContains
  indicates
  confidence
  valid_from
  valid_until
  pattern_type
  x_opencti_main_observable_type
  report_types
  x_opencti_report_status
  published
}

input StixDomainObjectsFiltering {
  key: StixDomainObjectsFilter!
  values: [String]
  operator: String
}

enum StixDomainObjectsOrdering {
  name
  entity_type
  created
  modified
  created_at
  updated_at
  published
  object_status
  valid_from
  valid_until
  indicator_pattern
}

type StixFile implements BasicObject & StixObject & StixCoreObject & StixCyberObservable & HashedObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  hashes: [Hash]
  extensions: String
  size: Int
  name: String
  name_enc: String
  magic_number_hex: String
  mime_type: String
  ctime: DateTime
  mtime: DateTime
  atime: DateTime
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input StixFileAddInput {
  hashes: [HashInput]
  extensions: String
  size: Int
  name: String
  name_enc: String
  magic_number_hex: String
  mime_type: String
  ctime: DateTime
  mtime: DateTime
  atime: DateTime
}

interface StixMetaObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  created: DateTime
  modified: DateTime
}

type StixMetaRelationship implements BasicRelationship & StixRelationship {
  id: ID!
  entity_type: String!
  parent_types: [String]!
  fromRole: String
  toRole: String
  created_at: DateTime!
  updated_at: DateTime!
  standard_id: String!
  x_opencti_stix_ids: [String]
  spec_version: String!
  from: StixObjectOrStixRelationship
  to: StixObjectOrStixRelationship
}

input StixMetaRelationshipAddInput {
  relationship_type: String!
  fromId: ID
  toId: ID
}

input StixMetaRelationshipsAddInput {
  relationship_type: String!
  fromIds: [ID]
  toIds: [ID]
}

union StixObjectOrStixRelationship =
    MarkingDefinition
  | Label
  | KillChainPhase
  | ExternalReference
  | AttackPattern
  | Campaign
  | Note
  | ObservedData
  | Opinion
  | Report
  | CourseOfAction
  | Individual
  | Organization
  | Sector
  | Indicator
  | Infrastructure
  | IntrusionSet
  | City
  | Country
  | Region
  | Position
  | Malware
  | ThreatActor
  | Tool
  | Vulnerability
  | XOpenCTIIncident
  | AutonomousSystem
  | Directory
  | DomainName
  | EmailAddr
  | EmailMessage
  | EmailMimePartType
  | Artifact
  | StixFile
  | X509Certificate
  | IPv4Addr
  | IPv6Addr
  | MacAddr
  | Mutex
  | NetworkTraffic
  | Process
  | Software
  | Url
  | UserAccount
  | WindowsRegistryKey
  | WindowsRegistryValueType
  | X509V3ExtensionsType
  | XOpenCTICryptographicKey
  | XOpenCTICryptocurrencyWallet
  | XOpenCTIHostname
  | XOpenCTIText
  | XOpenCTIUserAgent
  | StixCoreRelationship
  | StixMetaRelationship
  | StixSightingRelationship
  | StixCyberObservableRelationship
type StixObjectOrStixRelationshipConnection {
  pageInfo: PageInfo!
  edges: [StixObjectOrStixRelationshipEdge]
}

type StixObjectOrStixRelationshipEdge {
  cursor: String!
  node: StixObjectOrStixRelationship!
}

enum StixObjectOrStixRelationshipsFilter {
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}

input StixObjectOrStixRelationshipsFiltering {
  key: StixObjectOrStixRelationshipsFilter!
  values: [String]!
  operator: String
}

enum StixObjectOrStixRelationshipsOrdering {
  name
  entity_type
  created_at
  updated_at
  createdBy
  objectMarking
  objectLabel
}

interface StixRelationship {
  id: ID!
  entity_type: String!
  parent_types: [String]!
  fromRole: String
  toRole: String
  standard_id: String!
  x_opencti_stix_ids: [String]
  from: StixObjectOrStixRelationship
  to: StixObjectOrStixRelationship
}

type StixSightingRelationship implements BasicRelationship & StixRelationship {
  id: ID!
  entity_type: String!
  parent_types: [String]!
  fromRole: String
  toRole: String
  created_at: DateTime!
  updated_at: DateTime!
  standard_id: String!
  x_opencti_stix_ids: [String]
  spec_version: String!
  from: StixObjectOrStixRelationship
  to: StixObjectOrStixRelationship
  description: String
  first_seen: DateTime
  last_seen: DateTime
  attribute_count: Int!
  x_opencti_negative: Boolean!
  created: DateTime
  modified: DateTime
  confidence: Int
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  creator: User
  toStix: String
  editContext: [EditUserContext]
}

input StixSightingRelationshipAddInput {
  stix_id: String
  fromId: String!
  toId: String
  description: String
  first_seen: DateTime
  last_seen: DateTime
  attribute_count: Int!
  x_opencti_negative: Boolean
  confidence: Int
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type StixSightingRelationshipConnection {
  pageInfo: PageInfo!
  edges: [StixSightingRelationshipsEdge]
}

type StixSightingRelationshipEditMutations {
  delete: ID
  fieldPatch(
    input: EditInput
    operation: EditOperation
  ): StixSightingRelationship
  contextPatch(input: EditContext): StixSightingRelationship
  contextClean: StixSightingRelationship
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(
    toId: String!
    relationship_type: String!
  ): StixSightingRelationship
}

type StixSightingRelationshipsEdge {
  cursor: String!
  node: StixSightingRelationship!
}

enum StixSightingRelationshipsFilter {
  x_opencti_negative
  created
  modified
  created_at
  confidence
  createdBy
  markedBy
  labelledBy
  toPatternType
  toMainObservableType
}

input StixSightingRelationshipsFiltering {
  key: StixSightingRelationshipsFilter!
  values: [String]
  operator: String
}

enum StixSightingRelationshipsOrdering {
  confidence
  number
  x_opencti_negative
  first_seen
  last_seen
  created
  modified
  created_at
  updated_at
  objectMarking
  objectLabel
  toName
  toValidFrom
  toValidUntil
  toPatternType
  toCreatedAt
}

type Subscription {
  settings(id: ID!): Settings
  group(id: ID!): Group
  user(id: ID!): User
  label(id: ID!): Label
  markingDefinition(id: ID!): MarkingDefinition
  killChainPhase(id: ID!): KillChainPhase
  stixDomainObject(id: ID!): StixDomainObject
  stixCyberObservable(id: ID!): StixCyberObservable
  stixCoreRelationship(id: ID!): StixCoreRelationship
  stixSightingRelationship(id: ID!): StixSightingRelationship
  stixCyberObservableRelationship(id: ID!): StixCyberObservableRelationship
  externalReference(id: ID!): ExternalReference
}

type SubType {
  id: ID!
  label: String!
}

type SubTypeConnection {
  pageInfo: PageInfo!
  edges: [SubTypeEdge]
}

type SubTypeEdge {
  cursor: String!
  node: SubType!
}

enum SubTypesOrdering {
  label
}

type ThreatActor implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  name: String!
  description: String
  aliases: [String]
  threat_actor_types: [String]
  first_seen: DateTime
  last_seen: DateTime
  roles: [String]
  goals: [String]
  sophistication: String
  resource_level: String
  primary_motivation: String
  secondary_motivations: [String]
  personal_motivations: [String]
  locations: LocationConnection
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input ThreatActorAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String!
  aliases: [String]
  threat_actor_types: [String]
  first_seen: DateTime
  last_seen: DateTime
  goals: [String]
  sophistication: String
  resource_level: String
  primary_motivation: String
  secondary_motivations: [String]
  personal_motivations: [String]
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type ThreatActorConnection {
  pageInfo: PageInfo!
  edges: [ThreatActorEdge]
}

type ThreatActorEdge {
  cursor: String!
  node: ThreatActor!
}

type ThreatActorEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): ThreatActor
  contextPatch(input: EditContext): ThreatActor
  contextClean: ThreatActor
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): ThreatActor
}

enum ThreatActorsFilter {
  name
  aliases
  created
  modified
  created_at
  updated_at
  createdBy
  markedBy
  labelledBy
}

input ThreatActorsFiltering {
  key: ThreatActorsFilter!
  values: [String]
  operator: String
}

enum ThreatActorsOrdering {
  name
  created
  modified
  created_at
  updated_at
}

type TimeSeries {
  date: DateTime!
  value: Int!
}

type Tool implements StixDomainObject & StixCoreObject & StixObject & BasicObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  name: String!
  description: String
  aliases: [String]
  tool_types: [String]
  tool_version: String
  killChainPhases: KillChainPhaseConnection
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input ToolAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String!
  aliases: [String]
  tool_types: [String]
  tool_version: String
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  killChainPhases: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type ToolConnection {
  pageInfo: PageInfo!
  edges: [ToolEdge]
}

type ToolEdge {
  cursor: String!
  node: Tool!
}

type ToolEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Tool
  contextPatch(input: EditContext): Tool
  contextClean: Tool
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Tool
}

enum ToolsFilter {
  name
  aliases
  created
  modified
  created_at
  createdBy
  markedBy
  labelledBy
}

input ToolsFiltering {
  key: ToolsFilter!
  values: [String]
  operator: String
}

enum ToolsOrdering {
  name
  created
  modified
  created_at
  updated_at
}

scalar Upload

type Url implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  value: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input UrlAddInput {
  value: String
}

type User implements BasicObject & InternalObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  user_email: String!
  name: String!
  description: String
  firstname: String
  lastname: String
  language: String
  external: Boolean
  roles: [Role]!
  capabilities: [Capability]!
  groups: GroupConnection
  token: String
  created_at: DateTime!
  updated_at: DateTime!
  allowed_marking: [MarkingDefinition]
  editContext: [EditUserContext]
}

scalar user_email_String_minLength_5_format_email

type UserAccount implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  extensions: String
  user_id: String
  credential: String
  account_login: String
  account_type: String
  display_name: String
  is_service_account: Boolean
  is_privileged: Boolean
  can_escalate_privs: Boolean
  is_disabled: Boolean
  account_created: DateTime
  account_expires: DateTime
  credential_last_changed: DateTime
  account_first_login: DateTime
  account_last_login: DateTime
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input UserAccountAddInput {
  extensions: String
  user_id: String
  credential: String
  account_login: String
  account_type: String
  display_name: String
  is_service_account: Boolean
  is_privileged: Boolean
  can_escalate_privs: Boolean
  is_disabled: Boolean
  account_created: DateTime
  account_expires: DateTime
  credential_last_changed: DateTime
  account_first_login: DateTime
  account_last_login: DateTime
}

input UserAddInput {
  user_email: user_email_String_minLength_5_format_email
  name: name_String_NotNull_minLength_2!
  password: String
  firstname: String
  lastname: String
  description: String
  language: String
  roles: [ID]
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]
}

type UserEdge {
  cursor: String!
  node: User!
}

type UserEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): User
  contextPatch(input: EditContext): User
  contextClean: User
  tokenRenew: User
  relationAdd(input: InternalRelationshipAddInput): InternalRelationship
  relationDelete(toId: String!, relationship_type: String!): User
}

input UserLoginInput {
  email: String!
  password: String!
}

enum UsersFilter {
  name
  entity_type
  created_at
}

input UsersFiltering {
  key: UsersFilter!
  values: [String]
  operator: String
}

enum UsersOrdering {
  name
  user_email
  firstname
  lastname
  language
  external
  created_at
  updated_at
}

enum VulnerabilitiesFilter {
  name
  x_opencti_base_score
  x_opencti_base_severity
  x_opencti_attack_vector
  created
  modified
  created_at
  createdBy
  markedBy
  labelledBy
}

input VulnerabilitiesFiltering {
  key: VulnerabilitiesFilter!
  values: [String]
  operator: String
}

enum VulnerabilitiesOrdering {
  name
  x_opencti_base_score
  x_opencti_base_severity
  x_opencti_attack_vector
  created
  modified
  created_at
  updated_at
}

type Vulnerability implements StixDomainObject & StixCoreObject & StixObject & BasicObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  name: String!
  description: String
  x_opencti_base_score: Float
  x_opencti_base_severity: String
  x_opencti_attack_vector: String
  x_opencti_integrity_impact: String
  x_opencti_availability_impact: String
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input VulnerabilityAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String!
  x_opencti_base_score: Float
  x_opencti_base_severity: String
  x_opencti_attack_vector: String
  x_opencti_integrity_impact: String
  x_opencti_availability_impact: String
  confidence: Int
  revoked: Boolean
  lang: String
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type VulnerabilityConnection {
  pageInfo: PageInfo!
  edges: [VulnerabilityEdge]
}

type VulnerabilityEdge {
  cursor: String!
  node: Vulnerability!
}

type VulnerabilityEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): Vulnerability
  contextPatch(input: EditContext): Vulnerability
  contextClean: Vulnerability
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): Vulnerability
}

type WindowsRegistryKey implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  attribute_key: String
  modified_time: DateTime
  number_of_subkeys: Int
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input WindowsRegistryKeyAddInput {
  attribute_key: String
  modified_time: DateTime
  number_of_subkeys: Int
}

type WindowsRegistryValueType implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  name: String
  data: String
  data_type: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input WindowsRegistryValueTypeAddInput {
  name: String
  data: String
  data_type: String
}

type Work {
  id: ID!
  name: String
  user: User
  connector: Connector
  timestamp: DateTime!
  status: Status!
  event_source_id: String
  received_time: DateTime
  processed_time: DateTime
  completed_time: DateTime
  import_expected_number: Int
  import_last_processed: DateTime
  import_processed_number: Int
  messages: [WorkMessage]
  errors: [WorkMessage]
}

type WorkConnection {
  pageInfo: PageInfo!
  edges: [WorkEdge]
}

type WorkEdge {
  cursor: String!
  node: Work!
}

type WorkEditMutations {
  delete: ID!
  reportExpectation(error: WorkErrorInput): Work!
  addExpectations(expectations: Int): Work!
  toReceived(message: String): Work!
  toProcessed(message: String, inError: Boolean): Work!
}

input WorkErrorInput {
  error: String
  source: String
}

type WorkMessage {
  timestamp: DateTime
  message: String
  sequence: Int
  source: String
}

enum WorksFilter {
  status
  connector_id
  import_expected_number
  import_processed_number
  import_last_processed
  completed_time
}

input WorksFiltering {
  key: WorksFilter!
  values: [String]
  operator: String
}

enum WorksOrdering {
  status
  timestamp
}

scalar x_mitre_id_String_NotNull_minLength_1

type X509Certificate implements BasicObject & StixObject & StixCoreObject & StixCyberObservable & HashedObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  hashes: [Hash]
  is_self_signed: Boolean
  version: String
  serial_number: String
  signature_algorithm: String
  issuer: String
  validity_not_before: DateTime
  validity_not_after: DateTime
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input X509CertificateAddInput {
  hashes: [HashInput]
  is_self_signed: Boolean
  version: String
  serial_number: String
  signature_algorithm: String
  issuer: String
  validity_not_before: DateTime
  validity_not_after: DateTime
}

type X509V3ExtensionsType implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  basic_constraints: String
  name_constraints: String
  policy_constraints: String
  key_usage: String
  extended_key_usage: String
  subject_key_identifier: String
  authority_key_identifier: String
  subject_alternative_name: String
  issuer_alternative_name: String
  subject_directory_attributes: String
  crl_distribution_points: String
  inhibit_any_policy: String
  private_key_usage_period_not_before: DateTime
  private_key_usage_period_not_after: DateTime
  certificate_policies: String
  policy_mappings: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input X509V3ExtensionsTypeAddInput {
  basic_constraints: String
  name_constraints: String
  policy_constraints: String
  key_usage: String
  extended_key_usage: String
  subject_key_identifier: String
  authority_key_identifier: String
  subject_alternative_name: String
  issuer_alternative_name: String
  subject_directory_attributes: String
  crl_distribution_points: String
  inhibit_any_policy: String
  private_key_usage_period_not_before: DateTime
  private_key_usage_period_not_after: DateTime
  certificate_policies: String
  policy_mappings: String
}

type XOpenCTICryptocurrencyWallet implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  value: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input XOpenCTICryptocurrencyWalletAddInput {
  value: String
}

type XOpenCTICryptographicKey implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  value: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input XOpenCTICryptographicKeyAddInput {
  value: String
}

type XOpenCTIHostname implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  value: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input XOpenCTIHostnameAddInput {
  value: String
}

type XOpenCTIIncident implements BasicObject & StixObject & StixCoreObject & StixDomainObject {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  revoked: Boolean!
  confidence: Int
  lang: String
  created: DateTime
  modified: DateTime
  name: String!
  description: String
  aliases: [String]
  first_seen: DateTime
  last_seen: DateTime
  objective: String
  creator: User
  importFiles(first: Int): FileConnection
  exportFiles(first: Int): FileConnection
  toStix: String
  editContext: [EditUserContext]
}

input XOpenCTIIncidentAddInput {
  stix_id: String
  name: name_String_NotNull_minLength_2!
  description: String!
  confidence: Int
  revoked: Boolean
  lang: String
  objective: String
  first_seen: DateTime
  last_seen: DateTime
  aliases: [String]
  createdBy: String
  objectMarking: [String]
  objectLabel: [String]
  externalReferences: [String]
  created: DateTime
  modified: DateTime
  clientMutationId: String
  update: Boolean
}

type XOpenCTIIncidentConnection {
  pageInfo: PageInfo!
  edges: [XOpenCTIIncidentEdge]
}

type XOpenCTIIncidentEdge {
  cursor: String!
  node: XOpenCTIIncident!
}

type XOpenCTIIncidentEditMutations {
  delete: ID
  fieldPatch(input: EditInput, operation: EditOperation): XOpenCTIIncident
  contextPatch(input: EditContext): XOpenCTIIncident
  contextClean: XOpenCTIIncident
  relationAdd(input: StixMetaRelationshipAddInput): StixMetaRelationship
  relationDelete(toId: String!, relationship_type: String!): XOpenCTIIncident
}

enum XOpenCTIIncidentsFilter {
  name
  aliases
  created
  modified
  created_at
  createdBy
  markedBy
  labelledBy
}

input XOpenCTIIncidentsFiltering {
  key: XOpenCTIIncidentsFilter!
  values: [String]
  operator: String
}

enum XOpenCTIIncidentsOrdering {
  name
  first_seen
  last_seen
  created
  modified
  created_at
  updated_at
}

type XOpenCTIText implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  value: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input XOpenCTITextAddInput {
  value: String
}

type XOpenCTIUserAgent implements BasicObject & StixObject & StixCoreObject & StixCyberObservable {
  id: ID!
  standard_id: String!
  entity_type: String!
  parent_types: [String]!
  x_opencti_stix_ids: [String]
  spec_version: String!
  created_at: DateTime!
  updated_at: DateTime!
  createdBy: OrganizationOrIndividual
  objectMarking: MarkingDefinitionConnection
  objectLabel: LabelConnection
  externalReferences(first: Int): ExternalReferenceConnection
  reports(first: Int): ReportConnection
  notes(first: Int): NoteConnection
  opinions(first: Int): OpinionConnection
  stixCoreRelationships(
    first: Int
    after: ID
    orderBy: StixCoreRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCoreRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCoreRelationshipConnection
  x_opencti_score: Int
  x_opencti_description: String
  observable_value: String!
  indicators: IndicatorConnection
  stixCyberObservableRelationships(
    first: Int
    after: ID
    orderBy: StixCyberObservableRelationshipsOrdering
    orderMode: OrderingMode
    fromId: String
    toId: String
    fromTypes: [String]
    toTypes: [String]
    relationship_type: String
    startTimeStart: DateTime
    startTimeStop: DateTime
    stopTimeStart: DateTime
    stopTimeStop: DateTime
    firstSeenStart: DateTime
    firstSeenStop: DateTime
    lastSeenStart: DateTime
    lastSeenStop: DateTime
    confidences: [Int]
    search: String
    filters: [StixCyberObservableRelationshipsFiltering]
    filterMode: FilterMode
  ): StixCyberObservableRelationshipConnection
  value: String
  creator: User
  toStix: String
  editContext: [EditUserContext]
  connectors(onlyAlive: Boolean): [Connector]
  jobs(first: Int): [Work]
}

input XOpenCTIUserAgentAddInput {
  value: String
}


